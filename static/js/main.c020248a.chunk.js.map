{"version":3,"sources":["img/logo.svg","reducers/todoListReducer.js","reducers/index.js","actions/types.js","reducers/visibilityReducer.js","utils/const.js","reducers/groupSelectedReducer.js","reducers/groupListReducer.js","reducers/authReducer.js","actions/index.js","config/urls.js","components/Header.js","components/auth/Login.js","components/auth/Signup.js","components/LandingPage/LandingPage.js","components/SelectedGroupContext.js","components/InputBar.js","components/TodoList.js","utils/getTodoList.js","components/StatusToggle.js","components/AddGroupModal.js","components/GroupSelector/GroupSelector.js","components/MainHeader.js","components/Sidebar/Sidebar.js","components/Main.js","components/PrivateRoute.js","components/App.js","index.js","img/Todoie_logo.svg"],"names":["module","exports","INITIALSTATE_TODOLIST","id","text","timeCreated","isCompleted","groupId","rootReducer","combineReducers","todoList","action","type","payload","newTodoList","map","todo","visibility","console","log","groupSelected","currentGroupId","groupList","groupName","form","formReducer","authed","state","fetchUser","dispatch","axios","get","then","response","data","username","catch","err","error","authUser","connect","props","currentURL","history","location","pathname","Navbar","className","expand","to","style","color","Brand","Button","variant","mapDispatchToProps","useState","setUsername","password","setPassword","validated","setValidated","isCredentialCorrect","setIsCredentialCorrect","Container","fluid","Row","src","logo","width","height","Col","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","formProps","post","status","JSON","parse","config","push","Group","controlId","Label","Control","placeholder","required","onChange","e","target","value","Feedback","block","display","NavDropdown","Divider","hasUsernameExisted","setHasUsernameExisted","toString","includes","Text","LandingPage","xs","size","SelectedGroupContext","React","createContext","SelectedGroupProvider","selectedGroupId","setSelectedGroupId","Provider","children","InputBar","input","setInput","useContext","todoContent","trim","createdTime","Date","setCount","prevCount","FormControl","fullList","filter","getTodoListFromSelection","list","item","key","_id","onClick","todoId","isToggled","StatusToggle","renderButton","bind","this","switchVisibility","Component","AddGroupModal","Modal","show","isModalOpen","onHide","closeModal","centered","Header","closeButton","Title","Body","InputGroup","onGroupNameInputChange","Footer","onAddNewGroup","GroupSelector","setIsModalOpen","groupNameInput","setGroupNameInput","useEffect","groups","length","ListGroup","group","Item","classNames","bg","setIsSidebarOpen","isSidebarOpen","icon","faAlignLeft","DropdownButton","title","Dropdown","Sidebar","Main","userData","setUserData","count","todos","PrivateRoute","PrivateComponent","component","path","rest","App","Login","Signup","exact","a","getAuthState","ReactDOM","render","store","createStore","reducer","applyMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.c020248a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.183dc3a6.svg\";","import { ADD_TODOITEM, TOGGLE_TODOITEM } from \"../actions/types\";\n\nconst INITIALSTATE_TODOLIST = [\n  {\n    id: -1,\n    text: \"drink water\",\n    timeCreated: 1584135899914,\n    isCompleted: false,\n    groupId: -1,\n  },\n  {\n    id: -2,\n    text: \"wash hands\",\n    timeCreated: 1584135992855,\n    isCompleted: true,\n    groupId: -2,\n  },\n];\n\nexport default function (todoList = INITIALSTATE_TODOLIST, action) {\n  switch (action.type) {\n    case ADD_TODOITEM:\n      return [...todoList, action.payload];\n    case TOGGLE_TODOITEM:\n      let newTodoList = todoList.map(\n        (todo) =>\n          todo.id === action.payload\n            ? { ...todo, isCompleted: !todo.isCompleted }\n            : todo\n        /**  以上是更好的写法 \n        // if (todo.id === action.payload) {\n        //   return {...todo, isComplete = !todo.isComplete}\n        // } else {\n        //   return todo\n        // }\n         */\n      );\n      return newTodoList;\n    default:\n      return todoList;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport todoListReducer from \"./todoListReducer\";\nimport visibilityReducer from \"./visibilityReducer\";\nimport groupSelectedReducer from \"./groupSelectedReducer\";\nimport groupListReducer from \"./groupListReducer\";\nimport authReducer from \"./authReducer\";\n\nconst rootReducer = combineReducers({\n  todoList: todoListReducer,\n  visibility: visibilityReducer,\n  groupSelected: groupSelectedReducer,\n  groupList: groupListReducer,\n  form: formReducer,\n  authed: authReducer,\n});\n\nexport default rootReducer;\n","export const ADD_TODOITEM = \"add_todoItem\";\nexport const TOGGLE_TODOITEM = \"toggle_todoItem\";\nexport const SWITCH_VISIBILITY = \"switch_visibility\";\nexport const SELECT_GROUP = \"select_group\";\nexport const ADD_GROUP = \"add_group\";\nexport const FETCH_USER = \"fetch_user\";\nexport const AUTH_USER = \"auth_user\";\n","import { STATUS_ALL } from \"../utils/const\";\nimport { SWITCH_VISIBILITY } from \"../actions/types\";\n\nexport default function(visibility = STATUS_ALL, action) {\n  switch (action.type) {\n    case SWITCH_VISIBILITY:\n      console.log(\"clicked toggle: \" + action.payload);\n      return action.payload;\n    default:\n      return visibility;\n  }\n}\n","export const STATUS_ALL = 0;\nexport const STATUS_TODO = 1;\nexport const STATUS_DONE = 2;\n","import { SELECT_GROUP } from \"../actions/types\";\n\nconst INITIAL_GROUP = -1;\n\nexport default function(currentGroupId = INITIAL_GROUP, action) {\n  switch (action.type) {\n    case SELECT_GROUP:\n      return action.payload;\n    default:\n      return currentGroupId;\n  }\n}\n","import { ADD_GROUP } from \"../actions/types\";\n\nexport default function(\n  groupList = [\n    { groupName: \"Default Group\", groupId: -1 },\n    {\n      groupName: \"Group 2\",\n      groupId: -2\n    }\n  ],\n  action\n) {\n  switch (action.type) {\n    case ADD_GROUP:\n      console.log(\"here is being executed\");\n      return [...groupList, action.payload];\n    default:\n      return groupList;\n  }\n}\n","import { FETCH_USER, AUTH_USER } from \"../actions/types\";\n\nexport default function (state = null, action) {\n  switch (action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    case AUTH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\n\nimport {\n  ADD_TODOITEM,\n  TOGGLE_TODOITEM,\n  SWITCH_VISIBILITY,\n  SELECT_GROUP,\n  ADD_GROUP,\n  FETCH_USER,\n  AUTH_USER,\n} from \"./types\";\nimport { URL_FETCH_USER } from \"../config/urls\";\n\nlet nextTodoId = 0;\nlet nextGroupId = 1;\n\nexport function fetchUser() {\n  return (dispatch) => {\n    axios\n      .get(URL_FETCH_USER)\n      .then((response) => {\n        console.log(response);\n        dispatch({ type: FETCH_USER, payload: response.data.username });\n      })\n      .catch((err) => console.error(err));\n  };\n}\n\nexport function authUser(username) {\n  return {\n    type: AUTH_USER,\n    payload: username,\n  };\n}\n\nexport const addTodoItem = (text, timestamp, currentGroupId) => {\n  return {\n    type: ADD_TODOITEM,\n    payload: {\n      id: nextTodoId++,\n      text,\n      timeCreated: timestamp,\n      isCompleted: false,\n      groupId: currentGroupId,\n    },\n  };\n};\n\nexport const toggleTodoItem = (id) => {\n  return {\n    type: TOGGLE_TODOITEM,\n    payload: id,\n  };\n};\n\nexport const switchVisibility = (visibility) => {\n  return { type: SWITCH_VISIBILITY, payload: visibility };\n};\n\nexport const selectGroup = (groupId) => {\n  return {\n    type: SELECT_GROUP,\n    payload: groupId,\n  };\n};\n\nexport const addGroup = (groupName) => {\n  return {\n    type: ADD_GROUP,\n    payload: {\n      groupName,\n      groupId: nextGroupId++,\n    },\n  };\n};\n\n/* authentication related */\n","export const URL_FETCH_USER = \"/api/current_user\";\nexport const URL_LOGIN = \"/api/login\";\nexport const URL_SIGNUP = \"/api/signup\";\nexport const URL_GETUSERDATA = \"/api/getUserData\";\nexport const URL_UPDATE_TODO = \"/api/updateTodo\";\nexport const URL_ADD_GROUP = \"/api/addGroup\";\n","import React from \"react\";\nimport { Navbar, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { connect } from \"react-redux\";\nimport \"./Header.css\";\n\nfunction Header(props) {\n  const currentURL = props.history.location.pathname;\n  if (\n    currentURL === \"/login\" ||\n    currentURL === \"/signup\" ||\n    currentURL === \"/app\"\n  )\n    return <></>;\n  else\n    return (\n      <Navbar className=\"header transparent\" expand=\"lg\">\n        <LinkContainer\n          to={props.authed ? \"/app\" : \"/\"}\n          style={{ color: \"white\" }}\n        >\n          <Navbar.Brand className=\"mr-auto\">Todoie</Navbar.Brand>\n        </LinkContainer>\n        <LinkContainer to=\"/login\">\n          <Button variant=\"light\" className=\"mr-2\">\n            Log in\n          </Button>\n        </LinkContainer>\n        <LinkContainer to=\"/signup\">\n          <Button variant=\"outline-light\" className=\"mr-2\">\n            Sign up\n          </Button>\n        </LinkContainer>\n      </Navbar>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n  authed: state.authed,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  NavDropdown,\n} from \"react-bootstrap\";\n\nimport { URL_LOGIN } from \"../../config/urls\";\nimport { authUser } from \"../../actions\";\nimport \"./auth.css\";\nimport logo from \"../../img/Todoie_logo.svg\";\n\nfunction Login(props) {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [validated, setValidated] = useState(false);\n  const [isCredentialCorrect, setIsCredentialCorrect] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    event.preventDefault();\n    const formProps = { username, password };\n    axios\n      .post(URL_LOGIN, formProps)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          props.authUser(JSON.parse(response.config.data).username);\n          console.log(props.authed);\n          props.history.push(\"/app\");\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n\n        setIsCredentialCorrect(true);\n        setPassword(null);\n      });\n  };\n\n  return (\n    <div className=\"auth bg-light\">\n      <Container fluid>\n        <Row className=\"pt-5 justify-content-center align-items-center\">\n          <Link to=\"/\" className=\"d-flex align-items-end logo-link\">\n            <img src={logo} width=\"30\" height=\"30\" />\n            <h3 className=\"d-inline-block m-0 text-dark\">odoie</h3>\n          </Link>\n        </Row>\n        <Row className=\"my-4 justify-content-center\">\n          <Col className=\"auth-form-container pt-3 pb-4 px-4 border rounded\">\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n              <h3 className=\"text-center text-secondary\">Log in</h3>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label className=\"font-weight-bold\">Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  required\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a proper Email.\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\" className=\"mb-4\">\n                <Form.Label className=\"font-weight-bold\">Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  required\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a proper password.\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\" block>\n                Log in\n              </Button>\n              <div\n                className=\"text-danger\"\n                style={{ display: isCredentialCorrect ? \"block\" : \"none\" }}\n              >\n                Invalid username or password\n              </div>\n            </Form>\n            <NavDropdown.Divider />\n            <div className=\"text-muted\">\n              Don't have an account yet? <Link to=\"/signup\">Sign up</Link>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({ authed: state.authed });\nconst mapDispatchToProps = { authUser };\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  NavDropdown,\n} from \"react-bootstrap\";\n\nimport { URL_SIGNUP } from \"../../config/urls\";\nimport { authUser } from \"../../actions\";\nimport logo from \"../../img/Todoie_logo.svg\";\n\nfunction Signup(props) {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  // const [validated, setValidated] = useState(false);\n  const [hasUsernameExisted, setHasUsernameExisted] = useState(false);\n\n  function handleSubmit(event) {\n    // const form = event.currentTarget;\n    // if (form.checkValidity() === false) {\n    //   event.preventDefault();\n    //   event.stopPropagation();\n    // }\n\n    // setValidated(true);\n\n    event.preventDefault();\n\n    const formProps = { username, password };\n    axios\n      .post(URL_SIGNUP, formProps)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          props.authUser(formProps.username);\n          props.history.push(\"/app\");\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n        if (err.toString().includes(\"409\")) {\n          setHasUsernameExisted(true);\n          setPassword(null);\n        }\n      });\n  }\n\n  function onUsernameInputChange(e) {\n    setUsername(e.target.value);\n  }\n\n  function onPasswordInputChange(e) {\n    setPassword(e.target.value);\n  }\n\n  return (\n    // <div>\n    //   <Link to=\"/\">Todoie</Link>\n    //   <div>Sign up</div>\n    //   <form onSubmit={handleSubmit(this.onFormSubmit)}>\n    //     <fieldset>\n    //       <label>Email:</label>\n    //       <Field name=\"username\" component=\"input\" type=\"text\" />\n    //     </fieldset>\n    //     <fieldset>\n    //       <label>Password: </label>\n    //       <Field name=\"password\" component=\"input\" type=\"password\" />\n    //     </fieldset>\n    //     <button>Sign up</button>\n    //   </form>\n    //   <div>todo: error message</div>\n    // </div>\n    <div className=\"auth bg-light\">\n      <Container fluid>\n        <Row className=\"pt-5 justify-content-center align-items-center\">\n          <Link to=\"/\" className=\"d-flex align-items-end logo-link\">\n            <img src={logo} width=\"30\" height=\"30\" />\n            <h3 className=\"d-inline-block m-0 text-dark\">odoie</h3>\n          </Link>\n        </Row>\n        <Row className=\"my-4 justify-content-center\">\n          <Col className=\"auth-form-container pt-3 pb-4 px-4 border rounded\">\n            <Form\n              //  validated={validated}\n              onSubmit={handleSubmit}\n            >\n              <h3 className=\"text-center text-secondary\">Sign up</h3>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label className=\"font-weight-bold\">Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  required\n                  onChange={onUsernameInputChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a proper Email.\n                </Form.Control.Feedback>\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\" className=\"mb-4\">\n                <Form.Label className=\"font-weight-bold\">Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  required\n                  onChange={onPasswordInputChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a proper password.\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\" block>\n                Sign up\n              </Button>\n              <div\n                className=\"text-danger\"\n                style={{ display: hasUsernameExisted ? \"block\" : \"none\" }}\n              >\n                Email has been registered.\n              </div>\n            </Form>\n            <NavDropdown.Divider />\n            <div className=\"text-muted\">\n              Already have an account? <Link to=\"/login\">Log in</Link>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = { authUser };\nexport default connect(null, mapDispatchToProps)(Signup);\n\n// export default reduxForm({ form: \"signup\" })(connectedComponent);\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport logo from \"../../img/logo.svg\";\nimport \"./LandingPage.css\";\n\nexport default function LandingPage(props) {\n  return (\n    <Container fluid className=\"landing-page\">\n      <div className=\"layer\"> </div>\n      <div className=\"content d-flex flex-column justify-content-center\">\n        <Row className=\"justify-content-center py-3 m-0\">\n          {/* <Col xs=\"auto\"> */}\n          {/* <svg\n            className=\"logo\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 278 278\"\n          >\n            <path d=\"M254.8 0h-98.5 -33 -99.5C15.5 0 8.5 6.7 8.5 15v33c0 8.3 6.7 15 15 15s15-6.7 15-15V30h69v218H89.8c-8.3 0-15 6.7-15 15s6.7 15 15 15h99c8.3 0 15-6.7 15-15s-6.7-15-15-15H170.5V30h69v18c0 8.3 6.7 15 15 15s15-6.7 15-15V15C269.5 6.7 263.1 0 254.8 0z\" />\n          </svg>\n          <h2>odoie</h2> */}\n          {/* <img src={logo} width=\"360\" height=\"400\" /> */}\n          {/* </Col> */}\n          <h1 className=\"text-light\">Todoie</h1>\n        </Row>\n        <Row className=\"justify-content-center m-0\">\n          <h4 className=\"text-light\">A simple todo list app.</h4>\n        </Row>\n        <Row className=\"justify-content-center pt-3 m-0\">\n          <Col xs=\"auto\">\n            <LinkContainer to=\"/signup\">\n              <Button variant=\"info\" size=\"lg\">\n                Sign up for free now!\n              </Button>\n            </LinkContainer>\n          </Col>\n        </Row>\n      </div>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport const SelectedGroupContext = React.createContext();\n\nexport const SelectedGroupProvider = (props) => {\n  const [selectedGroupId, setSelectedGroupId] = useState();\n\n  return (\n    <SelectedGroupContext.Provider\n      value={[selectedGroupId, setSelectedGroupId]}\n    >\n      {props.children}\n    </SelectedGroupContext.Provider>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { InputGroup, FormControl, Button, Form, Row } from \"react-bootstrap\";\nimport { SelectedGroupContext } from \"./SelectedGroupContext\";\n\nfunction InputBar(props) {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = { text: \"\" };\n\n  //   this.onInputChange = this.onInputChange.bind(this);\n  //   this.onSubmit = this.onSubmit.bind(this);\n  // }\n\n  const [input, setInput] = useState(\"\");\n  const [selectedGroupId, setSelectedGroupId] = useContext(\n    SelectedGroupContext\n  );\n\n  function onInputChange(e) {\n    setInput(e.target.value);\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    let text = input.trim();\n    if (!text) {\n      return;\n    }\n\n    // api part\n    insertTodo(text);\n\n    // empty input bar text\n    setInput(\"\");\n    console.log(\"add to do: \" + text);\n  }\n\n  function insertTodo(todoContent) {\n    axios\n      .post(\"/api/insertTodo\", {\n        groupId: selectedGroupId,\n        todoContent,\n        createdTime: new Date(),\n      })\n      .then(() => {\n        props.setCount((prevCount) => prevCount + 1);\n      });\n  }\n\n  return (\n    // <form onSubmit={onSubmit}>\n    //   <input\n    //     className=\"\"\n    //     type=\"text\"\n    //     placeholder=\"Enter text\"\n    //     onChange={onInputChange}\n    //     value={input}\n    //   />\n    //   <button className=\"btn btn-primary\" type=\"submit\">\n    //     Add\n    //   </button>\n    // </form>\n    <Form onSubmit={onSubmit} className=\"mb-3\">\n      <Row>\n        <FormControl\n          type=\"text\"\n          value={input}\n          onChange={onInputChange}\n          style={{ width: \"300px\" }}\n          className=\"mr-2\"\n        />\n\n        <Button variant=\"secondary\" type=\"submit\">\n          Add Todo\n        </Button>\n      </Row>\n    </Form>\n  );\n}\n\nexport default InputBar;\n","import React, { useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Nav, Card, Button } from \"react-bootstrap\";\n// import { toggleTodoItem } from \"../actions\";\nimport { SelectedGroupContext } from \"./SelectedGroupContext\";\nimport { URL_UPDATE_TODO } from \"../config/urls\";\nimport getTodoListFromSelection from \"../utils/getTodoList\";\n\nfunction TodoList(props) {\n  const [selectedGroupId, setSelectedGroupId] = useContext(\n    SelectedGroupContext\n  );\n\n  function OnToggleTodoItem(todoId) {\n    axios\n      .post(URL_UPDATE_TODO, {\n        todoId,\n        isToggled: true,\n      })\n      .then((response) => {\n        props.setCount((prevCount) => prevCount + 1);\n      });\n  }\n\n  function renderList(list) {\n    return list.map((item) => (\n      <li\n        key={item._id}\n        className={\n          item.isCompleted\n            ? \"todo-list_li--completed\"\n            : \"todo-list_li--incomplete\"\n        }\n        onClick={() => {\n          OnToggleTodoItem(item._id);\n        }}\n      >\n        {item.todoContent}\n      </li>\n    ));\n  }\n\n  return (\n    <div className=\"todo-list\">\n      <ul>\n        {renderList(\n          getTodoListFromSelection(\n            // this.props.todoList,\n            props.list,\n            props.visibility,\n            selectedGroupId\n          )\n        )}\n      </ul>\n\n      {/* <Card>\n        <Card.Header>\n          <Nav variant=\"pills\" defaultActiveKey=\"#first\">\n            <Nav.Item>\n              <Nav.Link href=\"#first\">Active</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"#link\">Link</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"#disabled\" disabled>\n                Disabled\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Card.Header>\n        <Card.Body className=\"p-0\">\n          <ul>\n            {renderList(\n              getTodoListFromSelection(\n                // this.props.todoList,\n                props.list,\n                props.visibility,\n                selectedGroupId\n              )\n            )}\n          </ul>\n        </Card.Body>\n      </Card> */}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    visibility: state.visibility,\n  };\n}\n\n// export default connect(mapStateToProps, mapDispatchToProps)(TodoList);\nexport default connect(mapStateToProps)(TodoList);\n","import { STATUS_ALL, STATUS_TODO, STATUS_DONE } from \"./const\";\n\nexport default function getTodoListFromSelection(\n  fullList,\n  visibility,\n  currentGroupId\n) {\n  switch (visibility) {\n    case STATUS_ALL:\n      return fullList.filter((todo) => todo.groupId === currentGroupId);\n    case STATUS_TODO:\n      return fullList.filter(\n        (todo) => todo.groupId === currentGroupId && todo.isCompleted === false\n      );\n    case STATUS_DONE:\n      return fullList.filter(\n        (todo) => todo.groupId === currentGroupId && todo.isCompleted === true\n      );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { switchVisibility } from \"../actions\";\nimport { STATUS_ALL, STATUS_TODO, STATUS_DONE } from \"../utils/const\";\n\nclass StatusToggle extends Component {\n  constructor(props) {\n    super(props);\n    this.renderButton = this.renderButton.bind(this);\n  }\n\n  renderButton(text, status) {\n    return (\n      <button\n        className={\n          this.props.visibility === status\n            ? \"status-toggle_button--selected\"\n            : \"\"\n        }\n        onClick={() => this.props.switchVisibility(status)}\n      >\n        {text}\n      </button>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"status-toggle\">\n        {this.renderButton(\"All\", STATUS_ALL)}\n        {this.renderButton(\"Todo\", STATUS_TODO)}\n        {this.renderButton(\"Done\", STATUS_DONE)}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    visibility: state.visibility,\n  };\n}\n\nexport default connect(mapStateToProps, { switchVisibility })(StatusToggle);\n","import React from \"react\";\nimport { Modal, Button, InputGroup, FormControl } from \"react-bootstrap\";\n\nexport default function AddGroupModal(props) {\n  return (\n    <Modal show={props.isModalOpen} onHide={props.closeModal} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>New group</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <InputGroup>\n          <FormControl\n            placeholder=\"New group name\"\n            onChange={props.onGroupNameInputChange}\n          />\n        </InputGroup>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={props.closeModal}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={props.onAddNewGroup}>\n          Add\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ListGroup, Button, Row, Modal } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\n// import { selectGroup, addGroup } from \"../actions\";\nimport { SelectedGroupContext } from \"../SelectedGroupContext\";\nimport AddGroupModal from \"../AddGroupModal\";\nimport { URL_ADD_GROUP } from \"../../config/urls\";\nimport \"./GroupSelector.css\";\n// import Modal from \"react-modal\";\n// Modal.setAppElement(\"#root\");\n\nexport default function GroupSelector(props) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [groupNameInput, setGroupNameInput] = useState(\"\");\n  const [selectedGroupId, setSelectedGroupId] = useContext(\n    SelectedGroupContext\n  );\n\n  /* */\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  /* I am not sure if I should move this useEffect logic to Main.js */\n  useEffect(() => {\n    if (!selectedGroupId && props.groups.length > 0) {\n      setSelectedGroupId(props.groups[0]._id);\n    }\n  }, [selectedGroupId, props.groups]);\n\n  function openModal() {\n    setIsModalOpen(true);\n  }\n\n  function closeModal() {\n    setIsModalOpen(false);\n  }\n\n  function onGroupNameInputChange(e) {\n    if (e.target.value) {\n      const text = e.target.value.trim();\n      setGroupNameInput(text);\n    }\n  }\n\n  function onAddNewGroup(e) {\n    e.preventDefault();\n    axios\n      .post(URL_ADD_GROUP, {\n        groupName: groupNameInput,\n        timeCreated: new Date(),\n      })\n      .then((response) => {\n        console.log(response);\n        setSelectedGroupId(response.data._id);\n        props.setCount((prevCount) => prevCount + 1);\n      });\n\n    closeModal();\n    setGroupNameInput(\"\");\n    // this.setState({ isModalOpen: false, groupNameInput: \"\" });\n  }\n\n  function renderGroupList(groupList, currentGroupId) {\n    return groupList.map((group) => {\n      return (\n        <ListGroup.Item\n          key={group._id}\n          className={classNames(\"item\", {\n            \"item-selected\": group._id === currentGroupId,\n            \"text-primary\": group._id === currentGroupId,\n          })}\n          onClick={() => {\n            setSelectedGroupId(group._id);\n          }}\n        >\n          <span>{group.groupName}</span>\n        </ListGroup.Item>\n      );\n    });\n  }\n\n  return (\n    <div className=\"group-selector mt-5\">\n      <h4 className=\"mb-3 ml-3\">Groups</h4>\n      <ListGroup className=\"mb-2\">\n        {renderGroupList(props.groups, selectedGroupId)}\n      </ListGroup>\n      <Row className=\"justify-content-center\">\n        <Button\n          variant=\"secondary\"\n          size=\"sm\"\n          className=\"mt-3\"\n          onClick={openModal}\n        >\n          Add group\n        </Button>\n      </Row>\n\n      <AddGroupModal\n        isModalOpen={isModalOpen}\n        closeModal={closeModal}\n        onGroupNameInputChange={onGroupNameInputChange}\n        onAddNewGroup={onAddNewGroup}\n      />\n\n      {/* <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        overlayClassName=\"modal-overlay\"\n        className=\"modal-content\"\n      >\n        <div>\n          <header>\n            <h3>Add Group</h3>\n            <button onClick={closeModal}>x</button>\n          </header>\n          <form onSubmit={onAddNewGroup}>\n            <label>Group Name: </label>\n            <input onChange={onGroupNameInputChange} type=\"text\"></input>\n          </form>\n          <footer>\n            <Button variant=\"light\" onClick={onAddNewGroup}>\n              Add\n            </Button>\n          </footer>\n        </div>\n      </Modal> */}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Navbar, DropdownButton, Dropdown, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAlignLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction MainHeader(props) {\n  function toggleSidebar() {\n    props.setIsSidebarOpen(!props.isSidebarOpen);\n  }\n\n  return (\n    <Navbar bg=\"dark\">\n      <LinkContainer\n        to={props.authed ? \"/app\" : \"/\"}\n        style={{ color: \"white\" }}\n      >\n        <Navbar.Brand>Todoie</Navbar.Brand>\n      </LinkContainer>\n      <Button variant=\"outline-secondary\" onClick={toggleSidebar}>\n        <FontAwesomeIcon icon={faAlignLeft} />\n      </Button>\n      <DropdownButton\n        className=\"ml-auto\"\n        title={props.authed}\n        variant=\"secondary\"\n      >\n        <LinkContainer to=\"/api/logout\">\n          <Dropdown.Item>Log out</Dropdown.Item>\n        </LinkContainer>\n      </DropdownButton>\n    </Navbar>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  authed: state.authed,\n});\n\nexport default connect(mapStateToProps)(MainHeader);\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./Sidebar.css\";\n\nexport default function Sidebar(props) {\n  return (\n    <div\n      bg=\"dark\"\n      className={classNames(\"sidebar\", {\n        \"is-open\": props.isSidebarOpen,\n      })}\n    >\n      {props.children}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"react-bootstrap\";\n\nimport InputBar from \"./InputBar\";\nimport TodoList from \"./TodoList\";\nimport StatusToggle from \"./StatusToggle\";\nimport GroupSelector from \"./GroupSelector/GroupSelector\";\nimport { URL_GETUSERDATA } from \"../config/urls\";\nimport { SelectedGroupProvider } from \"./SelectedGroupContext\";\nimport MainHeader from \"./MainHeader\";\nimport Sidebar from \"./Sidebar/Sidebar\";\n\nexport default function Main(props) {\n  const [userData, setUserData] = useState(null);\n  const [count, setCount] = useState(0);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n\n  useEffect(() => {\n    axios.get(URL_GETUSERDATA).then((response) => {\n      setUserData(response.data);\n    });\n  }, [count]);\n\n  return (\n    <Container fluid className=\"p-0\" style={{ height: \"100vh\" }}>\n      <MainHeader\n        isSidebarOpen={isSidebarOpen}\n        setIsSidebarOpen={setIsSidebarOpen}\n      />\n      <SelectedGroupProvider>\n        <div className=\"container-\">\n          {console.log(userData ? userData.todos : [])}\n          {console.log(count)}\n          <Sidebar isSidebarOpen={isSidebarOpen}>\n            <GroupSelector\n              groups={userData ? userData.groups : []}\n              setCount={setCount}\n            />\n          </Sidebar>\n          <div className=\"middle-lane\">\n            <InputBar setCount={setCount} />\n            <StatusToggle />\n            <TodoList\n              list={userData ? userData.todos : []}\n              setCount={setCount}\n            />\n          </div>\n        </div>\n      </SelectedGroupProvider>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nclass PrivateRoute extends React.Component {\n  render() {\n    const { component: PrivateComponent, path, ...rest } = this.props;\n    return (\n      <Route path={path} {...rest}>\n        {this.props.authed ? <PrivateComponent /> : <Redirect to=\"/login\" />}\n      </Route>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ authed: state.authed });\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"./Header\";\nimport Login from \"./auth/Login\";\nimport Signup from \"./auth/Signup\";\nimport LandingPage from \"./LandingPage/LandingPage\";\nimport Main from \"./Main\";\nimport \"./App.css\";\nimport { fetchUser } from \"../actions\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  render() {\n    return (\n      <div>\n        <Route component={Header} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/\" exact component={LandingPage} />\n        <PrivateRoute path=\"/app\" component={Main} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchUser };\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducers/index\";\nimport { fetchUser } from \"./actions\";\n\nimport App from \"./components/App\";\n\nasync function getAuthState() {\n  await fetchUser();\n}\n\ngetAuthState().then(() => {\n  ReactDOM.render(\n    <Provider store={createStore(reducer, applyMiddleware(thunk))}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Todoie_logo.6a235456.svg\";"],"sourceRoot":""}